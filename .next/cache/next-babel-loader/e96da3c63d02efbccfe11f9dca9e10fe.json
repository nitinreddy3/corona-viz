{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime/regenerator\";\nvar _jsxFileName = \"W:\\\\learning\\\\corona-viz\\\\pages\\\\covidGlobal.js\";\nvar __jsx = React.createElement;\nimport React from 'react';\nimport { ResponsivePie } from '@nivo/pie';\nimport Layout from '../components/Layout';\nimport Link from '../src/Link';\nimport fetch from 'isomorphic-unfetch';\nimport { COVID_API } from '../constants';\n\nvar CovidGlobal = function CovidGlobal(props) {\n  var pieData = props.pieData;\n  console.log(pieData);\n  return __jsx(Layout, {\n    pageTitle: \"PieChart Representation\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 12\n    },\n    __self: this\n  }, __jsx(Link, {\n    href: \"/\",\n    color: \"secondary\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 13\n    },\n    __self: this\n  }, \"Home\"), __jsx(\"div\", {\n    style: {\n      height: 500,\n      width: '100%'\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 16\n    },\n    __self: this\n  }, __jsx(ResponsivePie, {\n    data: pieData,\n    margin: {\n      top: 40,\n      right: 80,\n      bottom: 80,\n      left: 80\n    },\n    innerRadius: 0.5,\n    padAngle: 0.7,\n    cornerRadius: 3,\n    colors: {\n      scheme: 'paired'\n    },\n    borderWidth: 1,\n    borderColor: {\n      from: 'color',\n      modifiers: [['darker', 0.2]]\n    },\n    radialLabelsSkipAngle: 10,\n    radialLabelsTextXOffset: 6,\n    radialLabelsTextColor: \"#333333\",\n    radialLabelsLinkOffset: 0,\n    radialLabelsLinkDiagonalLength: 16,\n    radialLabelsLinkHorizontalLength: 24,\n    radialLabelsLinkStrokeWidth: 1,\n    radialLabelsLinkColor: {\n      from: 'color'\n    },\n    slicesLabelsSkipAngle: 10,\n    slicesLabelsTextColor: \"#333333\",\n    animate: true,\n    motionStiffness: 90,\n    motionDamping: 15,\n    defs: [{\n      id: 'dots',\n      type: 'patternDots',\n      background: 'inherit',\n      color: 'rgba(255, 255, 255, 0.3)',\n      size: 4,\n      padding: 1,\n      stagger: true\n    }, {\n      id: 'lines',\n      type: 'patternLines',\n      background: 'inherit',\n      color: 'rgba(255, 255, 255, 0.3)',\n      rotation: -45,\n      lineWidth: 6,\n      spacing: 10\n    }],\n    fill: [{\n      match: {\n        id: 'Confirmed'\n      },\n      id: 'solid'\n    }, {\n      match: {\n        id: 'Recovered'\n      },\n      id: 'solid'\n    }, {\n      match: {\n        id: 'Deaths'\n      },\n      id: 'solid'\n    }],\n    legends: [{\n      anchor: 'bottom',\n      direction: 'row',\n      translateY: 56,\n      itemWidth: 100,\n      itemHeight: 18,\n      itemTextColor: '#999',\n      symbolSize: 18,\n      symbolShape: 'circle',\n      effects: [{\n        on: 'hover',\n        style: {\n          itemTextColor: '#000'\n        }\n      }]\n    }],\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 17\n    },\n    __self: this\n  })));\n};\n\nCovidGlobal.getInitialProps = function _callee() {\n  var res, data;\n  return _regeneratorRuntime.async(function _callee$(_context) {\n    while (1) {\n      switch (_context.prev = _context.next) {\n        case 0:\n          _context.next = 2;\n          return _regeneratorRuntime.awrap(fetch(COVID_API));\n\n        case 2:\n          res = _context.sent;\n          _context.next = 5;\n          return _regeneratorRuntime.awrap(res.json());\n\n        case 5:\n          data = _context.sent;\n          return _context.abrupt(\"return\", {\n            pieData: [{\n              id: \"Confirmed\",\n              label: \"Confirmed\",\n              value: data.confirmed.value,\n              \"color\": \"hsl(292, 70%, 50%)\"\n            }, {\n              id: \"Recovered\",\n              label: \"Recovered\",\n              value: data.recovered.value,\n              \"color\": \"hsl(108, 70%, 50%)\"\n            }, {\n              id: \"Deaths\",\n              label: \"Deaths\",\n              value: data.deaths.value,\n              \"color\": \"hsl(153, 70%, 50%)\"\n            }]\n          });\n\n        case 7:\n        case \"end\":\n          return _context.stop();\n      }\n    }\n  }, null, null, null, Promise);\n};\n\nexport default CovidGlobal;","map":{"version":3,"sources":["W:/learning/corona-viz/pages/covidGlobal.js"],"names":["React","ResponsivePie","Layout","Link","fetch","COVID_API","CovidGlobal","props","pieData","console","log","height","width","top","right","bottom","left","scheme","from","modifiers","id","type","background","color","size","padding","stagger","rotation","lineWidth","spacing","match","anchor","direction","translateY","itemWidth","itemHeight","itemTextColor","symbolSize","symbolShape","effects","on","style","getInitialProps","res","json","data","label","value","confirmed","recovered","deaths"],"mappings":"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","sourcesContent":["import React from 'react';\r\nimport { ResponsivePie } from '@nivo/pie';\r\nimport Layout from '../components/Layout';\r\nimport Link from '../src/Link';\r\nimport fetch from 'isomorphic-unfetch';\r\nimport { COVID_API } from '../constants'\r\n\r\nconst CovidGlobal = props => {\r\n  const { pieData } = props;\r\n  console.log(pieData)\r\n  return (\r\n    <Layout pageTitle=\"PieChart Representation\">\r\n      <Link href=\"/\" color=\"secondary\">\r\n        Home\r\n      </Link>\r\n      <div style={{ height: 500, width: '100%' }}>\r\n        <ResponsivePie\r\n          data={pieData}\r\n          margin={{ top: 40, right: 80, bottom: 80, left: 80 }}\r\n          innerRadius={0.5}\r\n          padAngle={0.7}\r\n          cornerRadius={3}\r\n          colors={{ scheme: 'paired' }}\r\n          borderWidth={1}\r\n          borderColor={{ from: 'color', modifiers: [['darker', 0.2]] }}\r\n          radialLabelsSkipAngle={10}\r\n          radialLabelsTextXOffset={6}\r\n          radialLabelsTextColor=\"#333333\"\r\n          radialLabelsLinkOffset={0}\r\n          radialLabelsLinkDiagonalLength={16}\r\n          radialLabelsLinkHorizontalLength={24}\r\n          radialLabelsLinkStrokeWidth={1}\r\n          radialLabelsLinkColor={{ from: 'color' }}\r\n          slicesLabelsSkipAngle={10}\r\n          slicesLabelsTextColor=\"#333333\"\r\n          animate={true}\r\n          motionStiffness={90}\r\n          motionDamping={15}\r\n          defs={[\r\n            {\r\n              id: 'dots',\r\n              type: 'patternDots',\r\n              background: 'inherit',\r\n              color: 'rgba(255, 255, 255, 0.3)',\r\n              size: 4,\r\n              padding: 1,\r\n              stagger: true\r\n            },\r\n            {\r\n              id: 'lines',\r\n              type: 'patternLines',\r\n              background: 'inherit',\r\n              color: 'rgba(255, 255, 255, 0.3)',\r\n              rotation: -45,\r\n              lineWidth: 6,\r\n              spacing: 10\r\n            }\r\n          ]}\r\n          fill={[\r\n            {\r\n              match: {\r\n                id: 'Confirmed'\r\n              },\r\n              id: 'solid'\r\n            },\r\n            {\r\n              match: {\r\n                id: 'Recovered'\r\n              },\r\n              id: 'solid'\r\n            },\r\n            {\r\n              match: {\r\n                id: 'Deaths'\r\n              },\r\n              id: 'solid'\r\n            },\r\n          ]}\r\n          legends={[\r\n            {\r\n              anchor: 'bottom',\r\n              direction: 'row',\r\n              translateY: 56,\r\n              itemWidth: 100,\r\n              itemHeight: 18,\r\n              itemTextColor: '#999',\r\n              symbolSize: 18,\r\n              symbolShape: 'circle',\r\n              effects: [\r\n                {\r\n                  on: 'hover',\r\n                  style: {\r\n                    itemTextColor: '#000'\r\n                  }\r\n                }\r\n              ]\r\n            }\r\n          ]}\r\n        />\r\n      </div>\r\n    </Layout>\r\n  )\r\n}\r\n\r\nCovidGlobal.getInitialProps = async function () {\r\n  const res = await fetch(COVID_API);\r\n  const data = await res.json();\r\n\r\n  return {\r\n    pieData: [\r\n      {\r\n        id: \"Confirmed\",\r\n        label: \"Confirmed\",\r\n        value: data.confirmed.value,\r\n        \"color\": \"hsl(292, 70%, 50%)\"\r\n      },\r\n      {\r\n        id: \"Recovered\",\r\n        label: \"Recovered\",\r\n        value: data.recovered.value,\r\n        \"color\": \"hsl(108, 70%, 50%)\"\r\n      },\r\n      {\r\n        id: \"Deaths\",\r\n        label: \"Deaths\",\r\n        value: data.deaths.value,\r\n        \"color\": \"hsl(153, 70%, 50%)\"\r\n      }\r\n    ]\r\n  };\r\n};\r\n\r\nexport default CovidGlobal;"]},"metadata":{},"sourceType":"module"}